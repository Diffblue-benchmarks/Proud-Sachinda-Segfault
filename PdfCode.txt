 import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.*;




public PdfPCell getCell(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorder(PdfPCell.NO_BORDER);
        return cell;
    }
    public PdfPCell getCell2(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }

    public PdfPCell getCell3(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }

    public PdfPCell getCell4(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }
    public PdfPCell getCell5(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }
    public PdfPCell getCell6(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }
    public PdfPCell getCell7(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }
    public PdfPCell getCell8(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }
    public PdfPCell getCell9(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }
    public PdfPCell getCell10(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }
    public PdfPCell getCell11(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }

    public PdfPCell getCell12(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }
    public PdfPCell getCell13(String text, int alignment) {
        PdfPCell cell = new PdfPCell(new Phrase(text));

        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }

    public void CreatePDF(ArrayList<String> questions){


        Document document = new Document();
        PdfName pdfName = new PdfName(txttopicname.getValue() + txtdate.getValue());
        document.addTitle(pdfName.toString());
        try
        {
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("C:\\Users\\Public\\" + pdfName + ".pdf"));
            document.open();
            PdfPTable table = new PdfPTable(2);

            table.setWidthPercentage(50);
            table.setPaddingTop(100);
            table.setTotalWidth(100);




            //code for creating exam page
            table.addCell(getCell(lblcoursecode.getValue() + ": ", PdfPCell.ALIGN_LEFT));
            table.addCell(getCell(txtcoursecode.getValue(), PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell2(lbltopicname.getValue() + ": ", PdfPCell.ALIGN_LEFT));
            table.addCell(getCell2(txttopicname.getValue(), PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell3(lbldate.getValue() + ": ", PdfPCell.ALIGN_LEFT));
            table.addCell(getCell3(txtdate.getValue(), PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell4(lblyos.getValue(), PdfPCell.ALIGN_LEFT));
            table.addCell(getCell4(txtyos.getValue(), PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell5(lbldegree.getValue(), PdfPCell.ALIGN_LEFT));
            table.addCell(getCell5(txtdegree.getValue(), PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell6(lblfaculties.getValue(),PdfPCell.ALIGN_LEFT));
            table.addCell(getCell6(txtfaculties.getValue(),PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell7(lblinternalexaminer.getValue(), PdfPCell.ALIGN_LEFT));
            table.addCell(getCell7(txtinternalexaminer.getValue(), PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell8(lblexternalexaminer.getValue(), PdfPCell.ALIGN_LEFT));
            table.addCell(getCell8(txtexternalexaminer.getValue(), PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell10(lblmaterial.getValue(), PdfPCell.ALIGN_LEFT));
            table.addCell(getCell10(txtmaterial.getValue(), PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell11(lbltime.getValue(), PdfPCell.ALIGN_LEFT));
            table.addCell(getCell11(txttime.getValue(), PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell12(lblmark.getValue(), PdfPCell.ALIGN_LEFT));
            table.addCell(getCell12(txtmark.getValue(), PdfPCell.ALIGN_MIDDLE));
            table.addCell(getCell13(lblinstructions.getValue(), PdfPCell.ALIGN_LEFT));
            table.addCell(getCell13(txtinstructions.getValue(), PdfPCell.ALIGN_MIDDLE));
            document.add(table);




            //adds questions to paper
            for(int i =0 ; i < questions.size(); i++){

                document.newPage();
                document.add(new Paragraph(questions.get(i) + " "));

            }


            document.close();
            writer.close();
        } catch (DocumentException e)
        {
            e.printStackTrace();
        } catch (FileNotFoundException e)
        {
            System.out.println(e.toString());
            e.printStackTrace();
        }